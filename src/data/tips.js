// auto typed tips
const tips = [
	"<span class='code--blue'>const</span> token <span class='code--red'>=</span> <span class='code--green'>useSelector</span><span class='code--yellow'>(</span><span class='code--purple'>(</span><span class='code--orange'>state</span><span class='code--purple'>)</span> <span class='code--blue'>=></span> <span class='code--orange'>state</span>.login.token<span class='code--yellow'>)</span>  ",
	"<span class='code--green'>.button:hover::before</span> <span class='code--yellow'>{</span><br /> <span class='code--blue'>z-index</span>: 1;<br /> <span class='code--blue'>transform</span>: <span class='code--blue'>scale</span><span class='code--purple'>(</span>1.2<span class='code--purple'>)</span>;<br /> <span class='code--yellow'>}</span>  ",
	"<span class='code--blue'>const</span> dispatch <span class='code--red'>=</span> <span class='code--green'>useDispatch</span><span class='code--yellow'>()</span>  ",
	"<span class='code--blue'>const</span> response <span class='code--red'>= await</span> <span class='code--blue'>fetch</span><span class='code--yellow'>(</span><span class='code--gold'>'http://localhost:3000/data'</span>,<br /> <span class='code--purple'>{</span> method: <span class='code--gold'>'POST'</span>, <span class='code--purple'>}</span><br /><span class='code--yellow'>)</span>  ",
	"<span class='code--blue'>const</span> regex <span class='code--red'>= new</span> <span class='code--blue'>RegExp</span><span class='code--yellow'>(</span><span class='code--gold'>'[a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+'</span><span class='code--yellow'>)</span>  ",
	"<span class='code--green'>.home</span> <span class='code--yellow'>{</span><br /> <span class='code--blue'>display</span>: <span class='code--blue'>grid</span>;<br /> <span class='code--blue'>grid-template-rows</span>: <span class='code--blue'>repeat</span><span class='code--purple'>(</span>2, 1<span class='code--red'>fr</span><span class='code--purple'>)</span>;<br /> <span class='code--blue'>grid-template-columns</span>: 1<span class='code--red'>fr</span>;<br /> <span class='code--blue'>gap</span>: 1.5<span class='code--red'>rem</span>;<br /> <span class='code--yellow'>}</span>  ",
	"<span class='code--blue'>const</span> formJson <span class='code--red'>=</span> <span class='code--blue'>Object</span>.<span class='code--green'>fromEntries</span><span class='code--yellow'>(</span>formData.<span class='code--green'>entries</span><span class='code--purple'>()</span><span class='code--yellow'>)</span>  ",
	"<span class='code--blue'>const</span> <span class='code--yellow'>[</span>index, setIndex<span class='code--yellow'>]</span> <span class='code--red'>=</span> <span class='code--green'>useState<span class='code--yellow'>(</span><span class='code--purple'>null</span><span class='code--yellow'>)</span>  ",
	"<span class='code--blue'>const</span> <span class='code--yellow'>{</span> actions, reducer <span class='code--yellow'>}</span> <span class='code--red'>=</span> <span class='code--green'>createSlice</span><span class='code--yellow'>(</span><span class='code--purple'>{</span><br />name: <span class='code--yellow'>'login'</span>,<br />  initialState,<br />reducers: <span class='code--blue'>{</span><br />reset: <span class='code--yellow'>{</span><br /><span class='code--green'>reducer</span>: <span class='code--purple'>()</span><span class='code--blue'>=></span> initialState, <span class='code--yellow'>}</span><span class='code--blue'>}</span>,<br /><span class='code--purple'>}</span><span class='code--yellow'>)</span><br /><span class='code--red'>export</span> <span class='code--blue'>const</span><span class='code--yellow'>{</span> reset <span class='code--yellow'>}</span> <span class='code--red'>=</span> actions  ",
	"<span class='code--red'>!</span>touchScreen <span class='code--red'>?</span> <span class='code--yellow'>'home'</span> <span class='code--red'>:</span> <span class='code--yellow'>'home home--ts'</span>",
	"  ",
]
export { tips }
